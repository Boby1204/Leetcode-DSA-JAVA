You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them.

We repeatedly make duplicate removals on s until we no longer can.

Return the final string after all such duplicate removals have been made. It can be proven that the answer is unique.

class Solution {
    public String removeDuplicates(String s) {
        Stack <Character> st = new Stack<>();
        for(int i = 0; i < s.length(); i ++){
            //if duplicates present
        if(!st.empty() && st.peek() == s.charAt(i)){
            st.pop();
        }
            else{
                st.push(s.charAt(i));
            }
        }
        String ans = "";
        while(!st.empty()){
            ans = st.pop() + ans;
        }
        return ans;
    }
}
