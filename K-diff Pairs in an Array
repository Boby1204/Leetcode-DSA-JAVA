Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.

A k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:

0 <= i, j < nums.length
i != j
nums[i] - nums[j] == k
Notice that |val| denotes the absolute value of val.

class Solution {
    public int findPairs(int[] arr, int k) {
        int count = 0;
        int n = arr.length;
        HashMap <Integer,Integer> mp = new HashMap<>();
        for(int i = 0; i < n; i++){
            mp.put(arr[i],mp.getOrDefault(arr[i],0)+1);
        }
        for(int val : mp.keySet()){
            if(k != 0){
                if(mp.containsKey(val + k)){
                    count++;
                }
            }
            else{
                if(mp.get(val) > 1)
                count++;
            }
        }
        return count;
    }
}
