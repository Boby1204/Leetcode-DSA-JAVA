Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.

class Solution {
    public ListNode middleNode(ListNode head) {
              if(head == null)
            return null;
        
        //we have only one node
        if(head.next == null)
            return head;
        ListNode slow= head;
        ListNode fast= head.next.next;

        while(fast != null && fast.next != null){
            slow= slow.next;
            fast= fast.next.next;
        }
        
        return slow.next;

    }
}
